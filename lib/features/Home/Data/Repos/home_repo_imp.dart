
import 'package:dartz/dartz.dart';
import 'package:transportation/core/constants.dart';
import 'package:transportation/core/services/api/api_service.dart';
import 'package:transportation/features/Home/Data/Models/destination_journeys.dart';
import 'package:transportation/features/Home/Data/Repos/home_repo.dart';
import '../../../../core/services/api/api_errors.dart';
import '../Models/get_all_bus_stop.dart';
import '../Models/start_destination_journeys.dart';

class homeRepoImpl implements HomeRepo{
  final apiService=ApiService(baseUrl);
  // @override
  // Future<Either<Failure,List<DestinationPoint>>>  GetBussesByStartPointAndDestination(String start_point,String destination) async {
  //   var result = await apiService.get(endPoint: 'api/BusStops/get-all/$start_point/$destination');
  //  return result.fold(
  //         (failure) {
  //           return Left(failure);
  //     },
  //         (response) {
  //           return Right(StartDestinationJourney.fromJson(response) as List<DestinationPoint> );
  //     },
  //   );
  //
  // }


  Future<Either<Failure, List<Item>>> GetBussesByStartPointAndDestination(String startPoint, String destination) async {
    var result = await apiService.get(endPoint: 'api/UpcomingJourney/get-all-Nearest-upcoming-journey/$destination/$startPoint');
    return result.fold(
          (failure) => Left(failure),
          (response) {
        var transportData = TransportData.fromJson(response);
        var items = transportData.startDestinationJourney?.map((journey) => journey as Item).toList() ?? []; // Convert StartDestinationJourney to Item
        return Right(items);
      },
    );
  }






  @override
  Future<Either<Failure, List<DestinationPoint>>> GetPreviousTickets() {
    // TODO: implement GetPreviousTickets
    throw UnimplementedError();
  }

  @override
  Future<Either<Failure, List<Item>>> GetAllBusStops() async {
    var result = await apiService.get(endPoint: 'api/BusStops/get-all');
    return result.fold(
          (failure) {
        return Left(failure);
      },
          (response) {
            print("//////////////////////");
            print(response);
            print("//////////////////////////");
           var body= Autogenerated.fromJson(response);
            print(body);
            print("//////////////////////////Bodyyyy");
            print(body.body!.length);
            print(body.body![0].id);

            return Right(body.body!);
      },
    );
  }




}